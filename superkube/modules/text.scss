// =Text
.text-thin {
    font-weight: 300;
}
.text-semibold {
    font-weight: 600;
}
.text-strong {
    font-weight: bold;
}
.text-italic {
    font-style: italic;
}
.text-mono {
    font-family: $font-monospace;
}
.text-caps {
    text-transform: uppercase;
    letter-spacing: .035em;
}
.text-nowrap {
    &,
    & td,
    & th {
        white-space: nowrap;
    }
}
.text {
    @include generate-text-colors;
    @include generate-text-size(scale(type), std);
}
@include for-lg { .text { @include generate-text-size(scale(type-lg), lg); }}
@include for-md { .text { @include generate-text-size(scale(type-md), md); }}
@include for-sm { .text { @include generate-text-size(scale(type-sm), sm); }}


// =Gradients
$gradients: map-get($colors, text-gradient);
@each $name, $value in $gradients {
    .text-gr-#{$name} {
        @if (map-has-key($value, deg)) {
            @include text-gradient(color(text-gradient, $name), map-get($value, deg));
        }
        @else {
            @include text-gradient(color(text-gradient, $name));
        }
    }
}
[class^="text-gr-"],
[class*=" text-gr-"] {
    display: inline-block;
    a,
    a:hover {
        opacity: 1;
    }
}